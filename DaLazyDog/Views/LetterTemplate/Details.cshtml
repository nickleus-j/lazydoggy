@model Lazydog.Model.LetterTemplate
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<DaLazyDog.Resources.SharedResources> SharedLocalizer
@{
    ViewData["Title"] = "Make Letter";
}

<style>
    .letter-control {
        margin: .15em .25em;
        height: calc(2.25rem + 2px);
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        color: #495057;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid #ced4da;
        border-radius: 0.25rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }
    div.white-space-pre-line {
        white-space: pre-line;
    }
</style>
<div ng-app="lazyDog" ng-controller="Details">

    <div>
        <h4>@SharedLocalizer["Letter_Template"]</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                <h4>@Html.DisplayFor(model => model.Name)</h4>
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Content)
            </dt>
            <dd class="col-sm-10 letter-content">
                @Html.Raw(Model.Content)
            </dd>
        </dl>
    </div>
    <div class="row">
        <div class="col-xs-3 offset-9">
            <a class="btn btn-info btn-generate" ng-click="generateLetter()">Generate Text</a>
        </div>
    </div>
    <div class="row">
        <div class="offset-4 col-xs-4 generatedText white-space-pre-line">
            {{LetterContent}}
        </div>
    </div>
</div>


@section Scripts
    {
    <script src="~/lib/angular.js/angular.min.js"></script>
    <script>
        (function (original) {
            jQuery.fn.clone = function () {
                var result = original.apply(this, arguments),
                    my_textareas = this.find('textarea').add(this.filter('textarea')),
                    result_textareas = result.find('textarea').add(result.filter('textarea')),
                    my_selects = this.find('select').add(this.filter('select')),
                    result_selects = result.find('select').add(result.filter('select'));

                for (var i = 0, l = my_textareas.length; i < l; ++i) $(result_textareas[i]).val($(my_textareas[i]).val());
                for (var i = 0, l = my_selects.length; i < l; ++i) result_selects[i].selectedIndex = my_selects[i].selectedIndex;

                return result;
            };
        })(jQuery.fn.clone);
            var excuse = "@Html.Raw(ViewBag.Excuse)";
        $("select,input").addClass("letter-control");
        var app = angular.module('lazyDog', []);
        app.controller('Details', function ($scope) {
            
                $scope.generateLetter = function () {
                    var contents, generated = $(".generatedText");
                    contents = $("div dl .letter-content").clone();
                    contents.find("br").each(function (index, elem) { elem.replaceWith("\n") });
                    contents.find("select").each(function (index, elem) { elem.replaceWith(elem.value) });
                    contents.find("input").each(function (index, elem) { elem.replaceWith(elem.value) });

                    $scope.LetterContent = contents.html();
                }
            $scope.generateLetter()
        });
        $('input[name="Excuse"]').val(excuse);
    </script>
}