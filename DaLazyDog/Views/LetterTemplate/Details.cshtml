@model Lazydog.Model.LetterTemplate
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization
@inject DaLazyDog.Models.CultureLocalizer SharedLocalizer
@{
    ViewData["Title"] = String.Concat(SharedLocalizer.Localize("WriteLetterFor"), ViewBag.Excuse);
}
<link href="~/css/GeneratedText.min.css" rel="stylesheet" />
<div ng-app="lazyDog" ng-controller="Details">

    <div>
        <h4>@ViewData["Title"]</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Name)
            </dt>
            <dd class="col-sm-10">
                <h4>@Html.DisplayFor(model => model.Name)</h4>
            </dd>

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Content)
            </dt>
            <dd class="col-sm-10 letter-content">
                @Html.Raw(Model.Content)
            </dd>
        </dl>
    </div>
    <div class="row">
        <div class="col-xs-3 offset-9">
            <a href="#" class="btn btn-info btn-generate" ng-click="generateLetter()">Generate Text</a>
        </div>
    </div>
    <div class="row letter-content">
        <div class="offset-3 col-xs-6 generatedText white-space-pre-line">
            {{LetterContent}}
        </div>
        <div class="col-xs-3">
            &nbsp;
        </div>
    </div>
</div>


@section Scripts
    {
    <script src="~/lib/angular.js/angular.min.js"></script>
    <script src="~/js/GenerateLetterPage.js"></script>
    <script>
        LetterGenerator.init("@Html.Raw(ViewBag.Excuse)");
    </script>
}
@section OgTags{
    <meta property="og:title" content="@ViewData["Title"]" />
}